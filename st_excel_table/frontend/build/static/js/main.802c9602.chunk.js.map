{"version":3,"sources":["ReactAwesomeTable.tsx","index.tsx"],"names":["ReactAwesomeTable","args","useRenderData","React","useState","data","setData","handleChange","useCallback","items","getRowKey","item","rowIndex","String","columns","onChange","options","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA6BeA,EAvBqB,WAChC,IACMC,EADyBC,0BACUD,KAEzC,EAAwBE,IAAMC,SAAyBH,EAAKI,MAA5D,mBAAOA,EAAP,KAAaC,EAAb,KACMC,EAAeJ,IAAMK,aAAY,SAACC,GACpCH,EAAQG,KACT,IACGC,EAAYP,IAAMK,aAAY,SAACG,EAAuBC,GACxD,MAAM,GAAN,OAAUC,OAAOF,GAAjB,YAA0BC,KAC3B,IAEH,OACI,kBAAC,IAAD,CACIP,KAAMA,EACNS,QAASb,EAAKa,QACdJ,UAAWA,EACXK,SAAUR,EACVS,QAASf,EAAKe,WCjB1BC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,oBAAD,KACI,kBAAE,EAAF,QAINC,SAASC,eAAe,W","file":"static/js/main.802c9602.chunk.js","sourcesContent":["import React from \"react\"\nimport { RenderData } from \"streamlit-component-lib\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport { Table, TableProps } from '@tk42/react-awesome-table';\n\n\nconst ReactAwesomeTable: React.FC = () => {\n    const renderData: RenderData = useRenderData()\n    const args: TableProps<any> = renderData.args\n\n    const [data, setData] = React.useState<Partial<any>[]>(args.data);\n    const handleChange = React.useCallback((items: Partial<any>[]) => {\n        setData(items);\n    }, []);\n    const getRowKey = React.useCallback((item: any | undefined, rowIndex: number): string => {\n        return `${String(item)}_${rowIndex}`;\n    }, []);\n\n    return (\n        <Table\n            data={data}\n            columns={args.columns}\n            getRowKey={getRowKey}\n            onChange={handleChange}\n            options={args.options}\n        />\n    )\n};\n\nexport default ReactAwesomeTable;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactAwesomeTable from \"./ReactAwesomeTable\"\n// import EmptyRow from './empty'\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <StreamlitProvider>\n            < ReactAwesomeTable />\n            {/* <EmptyRow /> */}\n        </StreamlitProvider>\n    </React.StrictMode>\n    , document.getElementById(\"root\"))\n"],"sourceRoot":""}